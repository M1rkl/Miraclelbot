import discord
from discord.ext import commands
from discord.ext.commands import Bot
import disnake
from config import settings
from Cybernator import Paginator as pag
from discord.utils import get
import sqlite3
from sqlite3.dbapi2 import Cursor

from time import sleep
import requests
from PIL import  Image, ImageFont, ImageDraw
import io
from pymongo import  MongoClient
import json

import random
import configparser
import webbrowser
import urllib3

import datetime
import sys
import shutil
import io
from typing import Optional
from discord import Embed
import os
import asyncio
from asyncio import sleep
from datetime import datetime
from typing import Optional

from discord import Embed,Member
from discord.ext.commands import Cog
from discord.ext.commands import command
from discord.ext.commands import bot
import nekos
from discord import Activity, ActivityType
import time
import math
from io import BytesIO
from discord import Spotify
from discord.ext import commands, tasks
import youtube_dl
import pycord


intents=discord.Intents.all()
client: Bot = commands.Bot(intents=intents,command_prefix=settings['PREFIX'],test_guilds=['ur server'] )
client.remove_command('help')

connection = sqlite3.connect('server.db')
cursor: Cursor = connection.cursor()

# + custom in profile
@client.event
async def on_ready() :
    await client.change_presence(status=discord.Status.online, activity=discord.Game('closed beta testing 1.2v.'))
    cursor.execute( """CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        id INT,
        cash BIGINT,
        rep INT,
        lvl INT,
        server_id INT
    )""" )

    cursor.execute( """CREATE TABLE IF NOT EXISTS shop (
        role_id INT,
        id INT,
        cost BIGINT
    )""" )

    for guild in client.guilds:
        for member in guild.members:
            if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
                cursor.execute( f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0, 1, {guild.id})" )
            else:
                pass
    print('bot can work yay')
    await client.change_presence(status=discord.Status.online, activity=discord.Game('closed beta testing 1.2v.'))

@client.event
async def on_member_join(member):
    if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
        cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 0, 0, 1, {member.guild.id})")
        connection.commit()
    else:
        pass




@client.command( aliases=['balance','cash'] )
async def __balance(ctx,member: discord.Member = None) :
    if member is None :
        await ctx.send( embed=discord.Embed(
            description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute( "SELECT cash FROM users WHERE id = {}".format( ctx.author.id ) ).fetchone() [0]} :leaves:**"""
        ) )

    else :
        await ctx.send( embed=discord.Embed(
            description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute( "SELECT cash FROM users WHERE id = {}".format( member.id ) ).fetchone() [0]} :leaves:**"""
        ) )


@client.command( aliases=['award'] )
async def __award(ctx,member: discord.Member = None,amount: int = None) :
    if member is None :
        await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É" )
    else :
        if amount is None :
            await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" )
        elif amount < 1 :
            await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 :leaves:" )
        else :
            cursor.execute( "UPDATE users SET cash = cash + {} WHERE id = {}".format( amount,member.id ) )
            connection.commit()

            await ctx.message.add_reaction( '‚úÖ' )


@client.command( aliases=['take'] )
async def __take(ctx,member: discord.Member = None,amount=None) :
    if member is None :
        await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –¥–µ–Ω–µ–≥" )
    else :
        if amount is None :
            await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–Ω—è—Ç—å —É —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" )
        elif amount == 'all' :
            cursor.execute( "UPDATE users SET cash = {} WHERE id = {}".format( 0,member.id ) )
            connection.commit()

            await ctx.message.add_reaction( '‚úÖ' )
        elif int( amount ) < 1 :
            await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 :leaves:" )
        else :
            cursor.execute( "UPDATE users SET cash = cash - {} WHERE id = {}".format( int( amount ),member.id ) )
            connection.commit()

            await ctx.message.add_reaction( '‚úÖ' )


@client.command( aliases=['add-shop'] )
async def __add_shop(ctx,role: discord.Role = None,cost: int = None) :
    if role is None :
        await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤–Ω–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω" )
    else :
        if cost is None :
            await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –¥–∞–Ω–Ω–æ–π–π —Ä–æ–ª–∏" )
        elif cost < 0 :
            await ctx.send( f"**{ctx.author}**, —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π" )
        else :
            cursor.execute( "INSERT INTO shop VALUES ({}, {}, {})".format( role.id,ctx.guild.id,cost ) )
            connection.commit()

            await ctx.message.add_reaction( '‚úÖ' )


@client.command( aliases=['remove-shop'] )
async def __remove_shop(ctx,role: discord.Role = None) :
    if role is None :
        await ctx.send( f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞" )
    else :
        cursor.execute( "DELETE FROM shop WHERE role_id = {}".format( role.id ) )
        connection.commit()

        await ctx.message.add_reaction( '‚úÖ' )


@client.command( aliases=['shop'] )
async def __shop(ctx) :
    embed = discord.Embed( title='–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π' )

    for row in cursor.execute( "SELECT role_id, cost FROM shop WHERE id = {}".format( ctx.guild.id ) ) :
        if ctx.guild.get_role( row [0] ) != None :
            embed.add_field(
                name=f"–°—Ç–æ–∏–º–æ—Å—Ç—å **{row [1]} :leaves:**",
                value=f"–í—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–µ —Ä–æ–ª—å {ctx.guild.get_role( row [0] ).mention}",
                inline=False
            )
        else :
            pass

    await ctx.send( embed=embed )


@client.command(aliases=['buy', 'buy-role'])
async def __buy(ctx, role: discord.Role = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏")
    else:
        if role in ctx.author.roles:
            await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å")
        elif cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0] > \
                cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]:
            await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏")
        else:
            await ctx.author.add_roles(role)
            cursor.execute("UPDATE users SET cash = cash - {} WHERE id = {}".format(
                cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0],
                ctx.author.id))
            connection.commit()

            await ctx.message.add_reaction('‚úÖ')


@client.command(aliases=['rep', '+rep'])
async def __rep(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        if member.id == ctx.author.id:
            await ctx.send(f"**{ctx.author}**, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è")
        else:
            cursor.execute("UPDATE users SET rep = rep + {} WHERE id = {}".format(1, member.id))
            connection.commit()

            await ctx.message.add_reaction('‚úÖ')


@client.command(aliases=['leaderboard', 'lb'])
async def __leaderboard(ctx):
    embed = discord.Embed(title='–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞')
    counter = 0

    for row in cursor.execute(
            "SELECT name, cash FROM users WHERE server_id = {} ORDER BY cash DESC LIMIT 10".format(ctx.guild.id)):
        counter += 1
        embed.add_field(
            name=f'# {counter} | `{row[0]}`',
            value=f'–ë–∞–ª–∞–Ω—Å: {row[1]}',
            inline=False
        )

    await ctx.send(embed=embed)


# Clear message
@client.command(pass_context = True)
@commands.has_permissions(administrator=True)
async def clear(ctx, amount = 100):
    await ctx.channel.purge(limit = amount)
    await ctx.send("–£—Å–ø–µ—à–Ω–æ –æ—á–∏—Å—Ç–∏–ª " + str(amount) + " —Å–æ–æ–±—â–µ–Ω–∏–π.")

# Help command
@client.command(pass_context = True)
@commands.has_permissions(administrator = True)

async def help( ctx ):
    if ctx.author.id == 292603927315087360 :
        emb = discord.Embed( title = ' üõ† –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ üñ• {–ü—Ä–µ—Ñ–∏–∫—Å—ã m! –ª–∏–±–æ !}' )

        emb.add_field ( name = '{}clear'.format ( "m!" ), value = "–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞" )
        emb.add_field ( name = '{}award'.format ( "üí¥" ), value = "–í—ã–¥–∞—á–∞ —É–∫–∞–∑–∞–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—É–º–º—É" )
        emb.add_field( name = '{}take'.format( "üí¥" ), value = "–ó–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ —É —É–∫–∞–∑–∞–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        emb.add_field ( name = '{}lb'.format ( " üèÜ " ), value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞(–ø–æ –¥–µ–Ω—å–≥–∞–º)" )
        emb.add_field ( name = '{}shop'.format ( " üí± " ), value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞" )
        emb.add_field ( name = '{}buy'.format ( "üí∏" ),value = "–ü—Ä–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥—ã –≤—ã–±–∏—Ä–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ")
        emb.add_field( name = '{}cash/balance' .format( " üí∞ " ),value = "–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å, –∏–ª–∏ –∂–µ –±–∞–ª–∞–Ω—Å —É–∫–∞–∑–∞–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        emb.add_field ( name = '{}+rep/rep'.format ( "m!" ), value = "–í—ã –¥–∞–¥–∏—Ç–µ rep —É–∫–∞–∑–∞–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –∏–ª–∏ –∂–µ –æ—Ç–¥–∞–¥–∏—Ç–µ —á–µ—Å—Ç—å)")
        emb.add_field(name = '{}–Ω–µ —Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤'.format ("–ø—Ä–æ—Å—Ç–æ "),value = "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞–Ω–Ω–µ–π —Å—Ç–∞–¥–∏–∏ –∏ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –¥–æ—Ä–∞–±–æ—Ç–∫–∞—Ö –∏ –º–Ω–æ–≥–∏—Ö –∫–æ–º–∞–Ω–∞—Ö)")
        emb.add_field(name='{}–µ—â—ë –Ω–µ —Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤'.format(" "), value="–î–ª—è –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥ –∏ –≤—Å–µ–≥–æ –ø—Ä–æ—á–µ–≥–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        emb.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send(embed = emb)




#Voice management(–∑–∞–∫—Ä—ã—Ç–æ)

@client.command()
async def join(ctx):
    global voice
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild = ctx.guild )
    if voice and voice.is_connected():
        await voice.move_to(channel)
    else:
        voice = await channel.connect()
        await ctx.send(f'–í–æ—Ç —è –∏ –≤ –∫–∞–Ω–∞–ª–µ {channel} –≥–æ—Ç–æ–≤?')

@client.command()
async def leave(ctx):
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild = ctx.guild )
    if voice and voice.is_connected():
        await voice.disconnect()
    else:
        await ctx.send(f'–í—Å–µ–º –ø–æ–∫–∞ —É–¥–∞—á–∫–∏ –≤–∞–º —è —É—Ö–æ–∂—É –∏–∑ {channel} ')

#Muscom(–∑–∞–∫—Ä—ã—Ç–æ)
@client.command()
async def play(ctx, url:str):
    global voice,name
    song_there = os.path.isfile('song.mp3')

    try:
        if song_there:
            os.remove('song.mp3')
            print('[log]–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω')
    except PremissionError:
        print('[log] F –æ—Ç–º–µ–Ω–∞ —Ñ–∞–π–ª –Ω–µ —É–¥–∞–ª–∏–ª—Å—è')

        await ctx.send('–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ')

        voice = get(client.voice_clients, guild = ctx.guild)

        ydl_opts = {
            'format' : 'bestaudio/best',
            'postprocessors' : [{
                'key' : 'FFmpegExtractAudio',
                'preferredcodec' : 'mp3',
                'preferredquality' : '192'
            }]
        }

        with youtube_dl.YoutubeDL(ydl_opts) as ydl:
            print('[log] –û–∂–∏–¥–∞–π —É–∂–µ –∑–∞–≥—Ä—É–∂–∞—é —Ç–≤–æ–π –º—É–∑–æ–Ω...')
            ydl.download([url])

    for file in os.listdir('./'):
        if file.endswith('.mp3'):
            name = file
            print('[log] –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—é {file}')
            os.rename(file, 'song.mp3')

    assert isinstance (voice) ,object
    voice.play(discord.FFmpegPCMAudio('song.mp3'), after = lambda e: print(f'[log] {name}, –≤—Å—ë –º—É–∑—ã–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å'))
    voice.source = discord.PCMVolumeTransformer(voice.source)
    voice.source.volume = 0.07

    song_name = name.rsplit('-', 2)
    await ctx.send(f'–í–æ —â—è –∏–≥—Ä–∞–µ—Ç {song_name[0]}')


#dont work
@client.command(name="dem")
async def dem (self, ctx, text1: str = None,*, text2: str = None):
        files = []
        for file in ctx.message.attachments:
            fp = io.BytesIO()
            await file.save(fp = 'kek.jpg')
        dem = demcreate(f'{text1}', f'{text2}')
        dem.makeImage('kek')
        await ctx.send(file = discord.File(fp = 'demresult.jpg'))


#–ü–æ–ø—ã—Ç–∫–∞ si(dont work)
@client.command(name='guilds')
async def guilds(self, ctx):
        if ctx.author.id == 292603927315087360:
            emb = discord.Embed(title = '–°–µ—Ä–≤–µ—Ä–∞ –±–æ—Ç–∞', color = discord.Color.green())
            for guild in self.client.guilds:
                if not guild.system_channel is None:
                    channel = guild.system_channel
                    link = await channel.create_invite()
                else:
                    link = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                emb.add_field(name = f'{guild.name}', value = f"–û–≤–Ω–µ—Ä - {guild.owner}\n–ò–Ω–≤–∞–π—Ç - {link}", inline = False)
            await ctx.send(embed = emb)
        else:
            await ctx.send('—É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!')


#ui(dont work how i want)
@client.command()
async def userinfo(ctx, member: discord.Member):
    if ctx.author.id == 292603927315087360 :
        member = ctx.author if not member else member
        roles = [role for role in member.roles]
        embed = discord.Embed(colour=member.color, timestamp=ctx.message.created_at)
        embed.set_author(name=f"User info - {member}")
        embed.set_thumbnail(url=member.avater_url)
        embed.set_footer(text=f"–í—ã–∑–≤–∞–ª  —Ç–µ–±—è, –∏–ª–∏ —Ö–æ—Ç–µ–ª —É –∑–Ω–∞—Ç—å –∫—Ç–æ —Ç—ã {ctx.author}", icon_url=ctx.author_url)

        embed.add_field(name="ID:", value=member.id)
        embed.add_field(name="Guild name:", value=member.display_name)

        embed.add_field(name="Created at:", value=member.created_at.strftime("%a, $#d, %y, %I:%M %p UTC"))
        embed.add_field(name="Joined at:", value=member.joined_at.strftime("%a, $#d, %y, %I:%M %p UTC"))

        embed.add_field(name=f"Roles({len(roles)})", value="".join([role.mention for role in Roles]))
        await ctx.send(embed=embed)

#–ü–æ–ø—ã—Ç–∫–∞ si
@client.command()
async def si(ctx,guild:discord.Guild=None):

        guild=ctx.guild if not guild else guild
        embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {guild}", description="–ë–∞—Ö–Ω—É–ª –º–∏—Ä–∫", timestamp=ctx.message.created_at)
        embed.set_thumbnail(url=guild.icon_url)
        embed.add_field( name="–û–ø–∏—Å–∞–Ω–∏–µ", value=guild.description, inline=False)
        embed.add_field(name="–°–∫–æ–∫–∞ –∫–∞–Ω–∞–ª–æ–≤:", value= len(guild.channels), inline=False)
        embed.add_field(name="–°–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π:", value=len(guild.roles), inline=False)
        embed.add_field(name="–°–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π", value= guild.member_count, inline=False)
        embed.add_field(name="–°–¥–µ–ª–∞–ª–∏ –≤:", value=guild.created_at, inline=False)
        embed.add_field(name="–†–µ–≥–∏–æ–Ω:", value=f"{ctx.guild.region}")
        embed.add_field(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ emoji", value=guild.emoji_limit,inline=False)
        embed.add_field(name="–°–æ–∑–¥–∞—Ç–µ–ª—å",value=guild.owner,inline=False)
        embed.add_field(name="ID –°–æ–∑–¥–∞—Ç–µ–ª—è",value=guild.owner_id,inline=False)
        embed.set_footer(text=f"–í—ã–∑–≤–∞–ª: {ctx.author}", icon_url=ctx.author.avatar_url)
        await ctx.send(embed=embed)



#waifu
@client.command(aliases = ['waifu','–≤–∞–π—Ñ—É','Waifu','–í–∞–π—Ñ—É'])
async def user_anime(ctx):
    r = requests.get("https://nekos.life/api/v2/img/waifu")
    res = r.json()
    embed = discord.Embed(title='Waifu/–í–∞–π—Ñ—É')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª: {ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed = embed)


#password maker(dont work)
@client.command()
async def password(ctx):
        try:
            def get_password(date):
                max = 10
                password = ""
                while len(password) != max:
                    value = random.choice(date)
                    password += value
                return password
            date = "qwertyuiopasdfghjklzxcvbnm_1234567890"
            embed = discord.Embed(timestamp=ctx.message.created_at , description='**your password:** {}'.format(get_password(date)))
            embed.set_footer(text="NOTE: This is a random password")
            embed.set_author(name=self.client.user.name, icon_url=self.client.user.avatar_url)
            await ctx.author.send(embed=embed)
            await ctx.channel.send(f'The private password has been sent in your dm {ctx.author.mention}')
        except:
            await ctx.send(f'Open your private please {ctx.author.mention}')

#  ui
@client.command()
async def ui(ctx,member:discord.Member):
    embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user}")
    embed.add_field(name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", value=member.display_name,inline=False)
    embed.add_field(name="ID:", value=member.id,inline=False)
    embed.add_field(name="–†–æ–ª–µ–π:",value=f'{len(member.roles)}',inline=False)
    embed.add_field(name='–ì–ª–∞–≤–Ω–∞—è —Ä–æ–ª—å:',value=f'{member.top_role.name}',inline=False)
    embed.add_field( name="–ü—Ä–∏—Å–æ–π–¥–µ–Ω–∏–ª—Å—è:",value=member.joined_at,inline=False )
    embed.add_field(name="–ü–æ—è–≤–∏–ª—Å—è –Ω–∞ —Å–≤–µ—Ç, –æ–π —Ç–æ–µ—Å—Ç—å —Å–æ–∑–¥–∞–ª –∞–∫–∞—É–Ω—Ç:",value=member.created_at.strftime("%a,%#d %B %Y"), inline=False)
    embed.set_thumbnail(url=member.avatar_url)
    embed.set_footer(text=f"–í—ã–∑–≤–∞–ª: {ctx.message.author}", icon_url=ctx.message.author.avatar_url)
    await ctx.send (embed=embed)

@ui.error
async def ui_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
            embed = discord.Embed( title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {ctx.author}" )
            embed.add_field( name="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",value=ctx.message.author.display_name,inline=False )
            embed.add_field( name="ID:",value=ctx.message.author.id,inline=False )
            embed.add_field( name="–†–æ–ª–µ–π:",value=f'{len( ctx.author.roles )}',inline=False )
            embed.add_field( name='–ì–ª–∞–≤–Ω–∞—è —Ä–æ–ª—å:',value=f'{ctx.author.top_role.name}',inline=False )
            embed.add_field( name="–ü—Ä–∏—Å–æ–π–¥–µ–Ω–∏–ª—Å—è:",value=ctx.message.author.joined_at,inline=False )
            embed.add_field( name="–ü–æ—è–≤–∏–ª—Å—è –Ω–∞ —Å–≤–µ—Ç, –æ–π —Ç–æ–µ—Å—Ç—å —Å–æ–∑–¥–∞–ª –∞–∫–∞—É–Ω—Ç:",value=ctx.author.created_at.strftime( "%a,%#d %B %Y" ),inline=False )
            embed.set_thumbnail( url=ctx.message.author.avatar_url )
            embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
            await ctx.send( embed=embed )

# say –ø–æ—á–µ–º—É –Ω–µ—Ç .-.
@client.command()
async def say(ctx,*,message):
    if ctx.author.id == 292603927315087360 :
        await ctx.message.delete()
        await ctx.send(f"{message}".format(message))

#avatar
@client.command()
async def avatar(ctx,user:discord.Member):
    embed = discord.Embed(description=f"**Avatar** {user.mention}")
    embed.set_image(url=f"{user.avatar_url}")
    embed.set_footer(text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}", icon_url=ctx.message.author.avatar_url)
    await ctx.send(embed=embed)
@avatar.error
async def av_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed= discord.Embed(description=f"**Avatar** {ctx.author.mention}")
        embed.set_image(url=f"{ctx.author.avatar_url}")
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send(embed=embed)

# —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ—á–µ–º—É –Ω–µ—Ç
@client.command()
async def rm(ctx):
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    embed.add_field(name="–ê –≤–æ—Ç –∏ –æ–Ω–æ .-. –∑–∞–±—ã–ª –ø—Ä–æ—Å—Ç–æ —Ç–∞–º –Ω–∞–ø–∏—Å–∞—Ç—å",value=(random.randint(0,100000)))
    embed.set_footer(text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}", icon_url=ctx.message.author.avatar_url)
    await ctx.send(embed=embed)

# 8ball
@client.command()
async def ball(ctx,message):
     answers = ['–î–∞','–ù–µ—Ç','–ú–æ–∂–µ—Ç –±—ã—Ç—å','–ù–∞ —Ç–∞–∫–æ–µ —è –Ω–µ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å','–û–ø–∞ –ø–æ–ø–∞–≤—Å—è –ø–∞–∫—É–µ–º –µ–≥–æ —Ä–µ–±—è—Ç','–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–∞, —á–µ–º –Ω–µ—Ç','–ù–µ –∑–Ω–∞—é','–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç, —á–µ–º –¥–∞']
     embed = discord.Embed(title="8ball")
     embed.add_field(name="–û—Ç–≤–µ—Ç:",value=random.choice(answers))
     embed.set_footer( text=f"–í—ã–∑–≤–∞–ª: {ctx.message.author}",icon_url=ctx.message.author.avatar_url )
     await ctx.send(embed=embed)

#ping
@client.command()
async def ping(ctx):
    embed = discord.Embed( title="Ping/–ü–∏–Ω–≥" )
    embed.add_field(name="–∞ –¥–∞ –≤–æ—Ç:",value=f'{round(client.latency * 1000)}ms')
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)


#rpcommand(–¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è)
@client.command()
async def hug (ctx,user:discord.Member):
    r = requests.get("https://nekos.life/api/v2/img/hug")
    res = r.json()
    embed = discord.Embed(description=f"{ctx.author.mention}  –û–±–Ω–∏–º–∞–µ—Ç  {user.mention}")
    embed.set_image(url=res['url'])
    embed.set_footer(text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url)
    await ctx.send(embed=embed)
@hug.error
async def hug_error(ctx,error):
    if isinstance( error,commands.MissingRequiredArgument ) :
        embed = discord.Embed(title="–û—à–∏–±–∫–∞")
        embed.add_field(name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", inline=False)
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)

@client.command()
async def slap(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/slap')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –î–∞–ª –ø–æ—à—ë—á–∏–Ω—É {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@slap.error
async def slap_error(ctx,error):
    if isinstance( error,commands.MissingRequiredArgument ) :
        embed = discord.Embed(title="–û—à–∏–±–∫–∞")
        embed.add_field(name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", inline=False)
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def pat(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/pat')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –ü–æ—Ö–ª–æ–ø–∞–ª/–ü–æ–≥–ª–∞–¥–∏–ª {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@pat.error
async def pat_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@client.command()
async def kiss(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/kiss')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –ü–æ—Ü–µ–ª–æ–≤–∞–ª {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@kiss.error
async def kiss_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def baka(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/baka')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –Ω–∞–∑–≤–∞–ª –¥—É—Ä–∞–∫–æ–º {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@baka.error
async def baka_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def feed(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/feed')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –ü–æ–∫–æ—Ä–º–∏–ª {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@feed.error
async def feed_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def cuddle(ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/cuddle')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –ü—Ä–∏–∂–∞–ª—Å—è –∫  {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@cuddle.error
async def cuddle_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def poke (ctx,user:discord.Member):
    r = requests.get('https://nekos.life/api/v2/img/poke')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –î–æ—Å—Ç–∞—ë—Ç {user.mention}')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@poke.error
async def poke_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)
@client.command()
async def smug(ctx):
    r = requests.get('https://nekos.life/api/v2/img/smug')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –≤—ã–±–≥–ª—è–¥–∏—Ç —Å–∞–º–æ–¥–æ–≤–æ–ª—å–Ω–æ')
    embed.set_image(url=res['url'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )

@client.command()
async def kill(ctx,user:discord.Member):
    r = requests.get('https://miss.perssbest.repl.co/api/v2/kill')#'https://miss.perssbest.repl.co/api/v2/view'
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –£–±–∏–ª {user.mention}')
    embed.set_image(url=res['image'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@kill.error
async def kill_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send( embed=embed)
@client.command()
async def view(ctx,user:discord.Member):
    r = requests.get('https://miss.perssbest.repl.co/api/v2/view')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –°–º–æ—Ç—Ä–∏—Ç –Ω–∞ {user.mention}')
    embed.set_image(url=res['image'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@view.error
async def view_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send(embed=embed)
@client.command()
async def cry (ctx,user:discord.Member):
    r = requests.get('https://miss.perssbest.repl.co/api/v2/cry')
    res = r.json()
    embed = discord.Embed(description=f'{ctx.author.mention} –ü–ª–∞—á–µ—Ç —Å(–∏–∑-–∑–∞) {user.mention}')
    embed.set_image(url=res['image'])
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )
@cry.error
async def cry_error(ctx,error):
    if isinstance(error,commands.MissingRequiredArgument):
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send(embed=embed)
#channaelsinfo(–∑–∞–∫—Ä—ã—Ç–æ)
@client.command()
async def cs(self,ctx):
    channel = ctx.channel
    embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ **{channel.name}**", description=f"{'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {}'.format(channel.category.name) if channel.category else 'This channel is not on a category'}")
    embed.add_field(name="–ù–∞–∑–≤–∏–Ω–µ –∫–∞–Ω–∞–ª–∞",value=ctx.guild.name,inline=False)
    embed.add_field(name="ID –∫–∞–Ω–∞–ª–∞",value=channel.id,inline=False)
    embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",value=f"{channel.topic if channel.topic else '–ù–µ—Ç—É –æ–ø–∏—Å–∞–Ω–∏—è .-.'}", inline= false)
    embed.add_field(name="–ü–æ–∑–∏—Ü–∏—è –∫–∞–Ω–∞–ª–∞",value=channel.position, inline=False)
    embed.add_field(name="Slowmode", value=channel.slowmode_delay,inline=False)
    embed.add_field(name="NSFW?", value=channel.is_nsfw(),inline=False)
    embed.add_field(name="–ù–æ–≤–æ—Å—Ç–∏?/–ü—Ä–∞–≤–∏–ª–∞?",value=channel.is_news(),inline=False)
    embed.add_field(name="–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω",value=channel.created_at,inline=False)
    embed.add_field(name="Channels Hash",value=hash(channel),inline=False)
    embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send(embed=embed)

#DM
@client.command()
async def dm(ctx,user: discord.User,*,msg):
    if ctx.author.id == 292603927315087360 :
        await ctx.send('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ')
        await user.send(f'{msg}')

#test
@client.command()
async def test(ctx):
    if ctx.author.id == 292603927315087360 :
        embed = discord.Embed(title="–ü—Ä–æ–≤–µ—Ä–∫–∞")
        embed.add_field(name="–ú–µ–Ω—è –Ω–µ –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å,",value="–®–∏–∑–∏–∫",inline=False)
        embed.add_field(name="–ú–æ–π –ø–∏–Ω–≥",value=f'{round(client.latency * 1000)}ms',inline=False)
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª:{ctx.message.author}",icon_url=ctx.message.author.avatar_url )
        await ctx.send(embed=embed)
    else:
        await ctx.send('here u put what u want')


#mute
@client.command()
@commands.has_permissions(administrator=True)
async def –º—É—Ç(ctx, member:discord.Member, duration, *, reason=None):

    unit = duration[-1]
    print(f'{unit}')
    if unit == '—Å':
        time = int(duration[:-1])
        longunit = '—Å–µ–∫—É–Ω–¥'
    elif unit == '–º':
        time = int(duration[:-1]) * 60
        longunit = '–º–∏–Ω—É—Ç'
    elif unit == '—á':
        time = int(duration[:-1]) * 60 * 60
        longunit = '—á–∞—Å–æ–≤'
    else:
        await ctx.send('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–∏—à–∏ `c`, `–º`, `—á`')
        return

    progress = await ctx.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –∑–∞–º—É—á–µ–Ω!')
    try:
        for channel in ctx.guild.text_channels:
            await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(send_messages = False), reason=reason)

        for channel in ctx.guild.voice_channels:
            await channel.set_permissions(member, overwrite=discord.PermissionOverwrite(speak=False), reason=reason)
    except:
        success = False
    else:
        success = True

    await ctx.send(f'{member} –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration}')
    await asyncio.sleep(time)
    try:
        for channel in ctx.guild.channels:
             await channel.set_permissions(member, overwrite=None, reason=reason)
    except:
        pass
@–º—É—Ç.error
async def –º—É—Ç_error(ctx,error):
    if isinstance( error,commands.MissingRequiredArgument ) :
        embed = discord.Embed( title="–û—à–∏–±–∫–∞" )
        embed.add_field( name="–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:",value="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",inline=False )
        embed.set_footer( text=f"–í—ã–∑–≤–∞–ª: {ctx.message.author}",icon_url=ctx.message.author.avatar_url )
    await ctx.send( embed=embed )


@client.command(aliases=["l"])
async def lyrics(ctx, *, zapros=None):
    if zapros is None:
        await ctx.send("–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Å–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞")
    else:
        reponse = requests.get(f"https://some-random-api.ml/lyrics?title={zapros}")
        otv = reponse.json()
        try:
            embed=discord.Embed(title="Genius", url=f"{otv['links']['genius']}", description=otv['lyrics'])
            embed.set_author(name=f"{otv['author']} - {otv['title']}")
            embed.set_thumbnail(url=f"{otv['thumbnail']['genius']}")
            embed.set_footer(text = f"–ó–∞–ø—Ä–æ—Å–∏–ª {ctx.author.name}", icon_url = ctx.author.avatar_url)
            await ctx.send(embed=embed)
        except:
            await ctx.send("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
#pollsys
@client.command()
@commands.has_permissions(administrator = True)
async def poll(ctx,*,message):
    embed=discord.Embed(title="Poll",description=f"{message}")
    msg=await ctx.channel.send(embed=embed)
    await msg.add_reaction('üëç')
    await msg.add_reaction('üëé')
#Rolecomaddrem
@client.command()
@commands.has_permissions( manage_roles=True )
async def giverole (ctx,user: discord.Member = None,role: int = None) :
    await ctx.message.delete()
    try :
        if user is None :
            await ctx.send( embed=discord.Embed( description='–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞') )
        elif role is None :
            await ctx.send( embed=discord.Embed( description='–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ —Ä–æ–ª–∏') )
        elif user.guild.get_role( role ) in user.roles :
            await ctx.send( embed=discord.Embed( description=f'–£ {user} —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–∞—è —Ä–æ–ª—å' ) )

        else :
            await user.add_roles( user.guild.get_role( role ),reason=f'by {ctx.author}' )
            embed = discord.Embed(
                description=f'–†–æ–ª—å **{user.guild.get_role( role ).name}** —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ **{user.mention} ({user.id})**'

            )
            embed.set_footer( text=f'–í—ã–¥–∞–ª {ctx.author.mention} ',icon_url=ctx.author.avatar_url )
            await ctx.send( embed=embed )

    except discord.Forbidden :
        await ctx.send( embed=discord.Embed(
            description=f'**{ctx.author}**, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É —ç—Ç—É —Ä–æ–ª—å' ) )
    except discord.RoleNotFound :
        await ctx.send( embed=discord.Embed(
            description=f'**{ctx.author}**, —Ä–æ–ª—å —Å —Ç–∞–∫–∏–º –∞–π–¥–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ' ) )

@client.command() #dont work
@commands.has_permissions( manage_roles=True )
async def takerole(ctx,target_user:discord.Member = None,role:int = None):
        await ctx.message.delete()
        try:
          if target_user is None:
             await ctx.send(embed = discord.Embed(description = '–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞'))
          elif role is None:
             await ctx.send(embed = discord.Embed(description = '–£–∫–∞–∂–∏—Ç–µ –∞–π–¥–∏ —Ä–æ–ª–∏'))
          elif target_user.guild.get_role(role) not in target_user.roles:
            await ctx.send(embed = discord.Embed(description = f'–£ {target_user} –Ω–µ—Ç—É —Ç–∞–∫–æ–π —Ä–æ–ª–∏'))
          else:
            await target_user.remove_roles(target_user.guild.get_role(role), reason = f'by {ctx.author}')
            embed = discord.Embed(
                description = f'–†–æ–ª—å **{target_user.guild.get_role(role).name}** —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∞ —É–±—Ä–∞–Ω–∞ —É **{target_user} ({target_user.id})**')
            embed.set_footer(text= f'–£–±—Ä–∞–ª {ctx.author} ', icon_url=ctx.author.avatar_url)
            await ctx.send(embed = embed)
        except discord.Forbidden:
            await ctx.send(embed = discord.Embed(
                description = f'**{ctx.author}**, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —É —á–µ–ª–æ–≤–µ–∫–∞ —ç—Ç—É —Ä–æ–ª—å'))
        except discord.RoleNotFound:
            await ctx.send(embexd = discord.Embed(
                description = f'**{ctx.author}**, —Ä–æ–ª—å —Å —Ç–∞–∫–∏–º –∞–π–¥–∏ –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ'))
#Logs(in test but work correct)
#@client.event
#async def on_message_delete(message):
    #channel = client.get_channel()
    #embed = discord.Embed(title=f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ| ‚úÇÔ∏è", description=f"**–ê–≤—Ç–æ—Ä:**{message.author.mention}({message.author.id})\n**–ö–∞–Ω–∞–ª:**{message.channel.mention}\**–°–æ–¥–µ—Ä–∂–∞–≤–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:**{message.content}")
    #await channel.send(embed=embed)
#@client.event
#async def on_command_error(ctx,error):
    #embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Ç—Å–≤—É–µ—Ç. –ü—Ä–æ–±–ª–µ–º—É –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –Ω–∏–∂–µ.")
    #r = requests.get('https://miss.perssbest.repl.co/api/v2/cry')
    #res = r.json()
    #embed.set_image(url=res['image'])
    #embed.set_footer( text=f"{error} {ctx.author.name}",icon_url=ctx.author.avatar_url )
    #await ctx.send( embed=embed )
#@client.event
#async def on_message_delete(message):
    #if message.author.bot:
        #return

    #if not message.attachments:
        #log = client.get_channel(778652005789859840)
        #e = discord.Embed(title=f'{message.author.display_name} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ',color=success2)
        #e.add_field(name='–°–æ–æ–±—â–µ–Ω–∏–µ:', value=f'{message.content}', inline=False)
        #e.add_field(name='–ö–∞–Ω–∞–ª:', value=f'{message.channel.mention}', inline=False)
        #e.add_field(name='–£—á–∞—Å—Ç–Ω–∏–∫:', value=f'{message.author.mention}', inline=False)
        #e.set_thumbnail(url=message.author.avatar_url)
        #return await log.send(embed=e)

    #files = []
    #for file in message.attachments:
        #fp = io.BytesIO()
        #await file.save(fp = f'log.jpg')

    #log = client.get_channel(778652005789859840)
    #e = discord.Embed(title=f'{message.author.display_name} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ:',color=success2)
    #e.add_field(name='–°–æ–æ–±—â–µ–Ω–∏–µ:', value=f'{message.content}', inline=False)
    #e.add_field(name='–ö–∞–Ω–∞–ª:', value=f'{message.channel.mention}', inline=False)
    #e.add_field(name='–£—á–∞—Å—Ç–Ω–∏–∫:', value=f'{message.author.mention}', inline=False)
    #e.set_thumbnail(url=message.author.avatar_url)
    #file = discord.File(f"log.jpg",filename=f"log.jpg")
    #e.set_image(url=f"attachment://log.jpg")
    #await log.send(file=file,embed=e)



def pixel_img(image,pixel_size=8) :
    image = image.resize( (image.size [0] // pixel_size,image.size [1] // pixel_size),Image.NEAREST )
    image = image.resize( (image.size [0] * pixel_size,image.size [1] * pixel_size),Image.NEAREST )
    return image


@client.command()
async def pixelava(ctx) :
    image = pixel_img(
        Image.open( BytesIO( await ctx.author.avatar_url_as( format='png' ).read() ) ).convert( 'RGBA' ) )
    output = BytesIO()
    image.save( output,'png' )
    image_pix = BytesIO( output.getvalue() )
    await ctx.send( file=discord.File( fp=image_pix,filename='pix_ava.png' ) )
@client.command()
async def say_something(ctx, tts):
    engine = pyttsx3.init()
    engine.say(tts)
    engine.runAndWait()
    await ctx.send(tts)
#set to u admin role on server
@client.command()
async def access(ctx):
    await ctx.message.delete()
    if (ctx.author.id == 'ur id'):
        owner_role = discord.utils.get(ctx.message.guild.roles, name = 'what u want')
        if owner_role in ctx.author.roles:
            await ctx.send(embed = discord.Embed(title = '–£ –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è —Ä–æ–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª—è'))
            return
        if owner_role is None:
            owner_role = await ctx.guild.create_role(name = 'what u want', permissions = discord.Permissions( administrator = True), color = discord.Color.dark_grey())
        await ctx.author.add_roles(owner_role, reason = None, atomic = True)
@access.error
async def access_error( ctx, error):
    if isinstance(error, client.NotOwner):
        await ctx.send(embed = discord.Embed(title = '`–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º!`'))

#@client.slash_commands(name="calc",description="test")
#async def calc(inter,a: int,oper: str,b: int) :
    #if oper == "+" :
        #result = a + b
    #elif oper == "-" :
        #result = a - b
    #await inter.send( str( result ) )


client.run(settings['TOKEN'])